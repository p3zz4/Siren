{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/siren.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","Siren","_this","this","_classCallCheck","canvas","initCanvas","ctx","getContext","playPauseBtn","initPlayPauseBtn","rightPanel","initRightPanel","playlist","initPlaylist","bottomPanel","initBottomPanel","audio","initAudio","sourceElements","analyser","initAnalyser","requestID","updateLocalPlaylist","window","addEventListener","event","which","click","_this2","document","createElement","body","appendChild","classList","add","span","innerHTML","childElementCount","playFirstTrack","paused","play","pause","_this3","controls","playPreviousTrackBtn","playPreviousTrack","playNextTrackBtn","playNextTrack","_this4","loader","type","id","accept","multiple","label","htmlFor","concat","_toConsumableArray","files","map","file","slice","forEach","addToRemotePlaylist","setTimeout","_","parent","width","innerWidth","height","innerHeight","_this5","preload","runVisualizer","togglePlayPauseBtn","stopVisualizer","newSource","index","source","src","console","log","load","length","playTrackAtIndex","indexOf","firstChild","context","AudioContext","createAnalyser","createMediaElementSource","connect","destination","_this6","requestAnimationFrame","updateVisualizer","fbcArray","Uint8Array","frequencyBinCount","getByteFrequencyData","clearRect","fillStyle","NumberOfBars","barWidth","barX","barHeight","fillRect","_this7","_this8","cancelAnimationFrame","path","fetch","headers","Accept","Content-Type","method","JSON","stringify","then","resolve","catch","err","_this9","response","json","reverse","element","track","deleteBtn","stopPropagation","parentNode","removeChild","splice","addSourceToQueue"],"mappings":"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","file":"siren.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","export class Siren {\n        constructor() {\n                this.canvas = this.initCanvas();\n                this.ctx = this.canvas.getContext(\"2d\");\n                this.playPauseBtn = this.initPlayPauseBtn();\n                this.rightPanel = this.initRightPanel();\n                this.playlist = this.initPlaylist(this.rightPanel);\n                this.bottomPanel = this.initBottomPanel();\n                this.audio = this.initAudio();\n                this.sourceElements = [];\n                this.analyser = this.initAnalyser();\n                this.requestID = null;\n\n                this.updateLocalPlaylist();\n                window.addEventListener(\"keypress\",event =>{\n                        if(event.which == 32){\n                                this.playPauseBtn.click();\n                        }\n                });\n        }\n        initPlayPauseBtn() {\n                const playPauseBtn = document.createElement(\"div\");\n                document.body.appendChild(playPauseBtn);\n                playPauseBtn.classList.add(\"playPauseBtn\");\n\n                const span = document.createElement(\"span\");\n                playPauseBtn.appendChild(span);\n                span.innerHTML = \"▶️\";\n                span.addEventListener(\"click\", () => {\n                        if (this.audio.childElementCount === 0) {\n                                this.playFirstTrack();\n                        } else {\n                                if (this.audio.paused) {\n                                        this.audio.play();\n                                } else {\n                                        this.audio.pause();\n                                }\n                        }\n                });\n                return span;\n        }\n        togglePlayPauseBtn() {\n                if (this.audio.paused) {\n                        this.playPauseBtn.innerHTML = \"▶️\";\n                } else {\n                        this.playPauseBtn.innerHTML = \"⏸\";\n                }\n        }\n        initBottomPanel() {\n                const bottomPanel = document.createElement(\"div\");\n                document.body.appendChild(bottomPanel);\n                bottomPanel.classList.add(\"bottomPanel\");\n\n                const controls = document.createElement(\"div\");\n                bottomPanel.appendChild(controls);\n                controls.classList.add(\"controls\");\n\n                const playPreviousTrackBtn = document.createElement(\"span\");\n                controls.appendChild(playPreviousTrackBtn);\n                playPreviousTrackBtn.classList.add(\"playNextTrackBtn\");\n                playPreviousTrackBtn.innerHTML = \"⏮\";\n                playPreviousTrackBtn.addEventListener(\"click\", () => {\n                        this.playPreviousTrack();\n                });\n\n                const playNextTrackBtn = document.createElement(\"span\");\n                controls.appendChild(playNextTrackBtn);\n                playNextTrackBtn.classList.add(\"playPreviousTrackBtn\");\n                playNextTrackBtn.innerHTML = \"⏭\";\n                playNextTrackBtn.addEventListener(\"click\", () => {\n                        this.playNextTrack();\n                });\n\n                return bottomPanel;\n        }\n        initRightPanel() {\n                const rightPanel = document.createElement(\"div\");\n                document.body.appendChild(rightPanel);\n                rightPanel.classList.add(\"rightPanel\");\n\n                const loader = document.createElement(\"input\");\n                rightPanel.appendChild(loader);\n                loader.type = \"file\";\n                loader.id = \"file\";\n                loader.accept = \".mp3\"\n                loader.multiple = true;\n\n                const label = document.createElement(\"label\");\n                rightPanel.appendChild(label);\n                label.classList.add(\"label\");\n                label.htmlFor = \"file\";\n                label.innerHTML = \"+\";\n\n                loader.addEventListener(\"change\", (event) => {\n                        [...loader.files].map((file) => file.name.slice(0, -4)).forEach(name => {\n                                this.addToRemotePlaylist(name,`../data/music/${name}.mp3`);\n                        });\n                        setTimeout(_ => {\n                                this.updateLocalPlaylist();\n                        }, 500);\n                });\n\n                return rightPanel;\n        }\n        initPlaylist(parent) {\n                const playlist = document.createElement(\"div\");\n                parent.appendChild(playlist);\n                playlist.classList.add(\"playlist\");\n                return playlist;\n        }\n        initCanvas() {\n                const canvas = document.createElement(\"canvas\");\n                document.body.appendChild(canvas);\n                canvas.classList.add(\"canvas\");\n                canvas.width = window.innerWidth;\n                canvas.height = window.innerHeight;\n                window.addEventListener(\"resize\", () => {\n                        canvas.width = window.innerWidth;\n                        canvas.height = window.innerHeight;\n                })\n                return canvas;\n        }\n        initAudio() {\n                const audio = document.createElement(\"audio\");\n                this.bottomPanel.appendChild(audio);\n                audio.classList.add(\"audio\");\n                audio.controls = \"contols\";\n                audio.preload = \"auto\";\n                audio.addEventListener(\"play\", _ => {\n                        this.runVisualizer();\n                        this.togglePlayPauseBtn();\n                });\n                audio.addEventListener(\"pause\", _ => {\n                        this.stopVisualizer();\n                        this.togglePlayPauseBtn();\n                });\n                audio.addEventListener(\"ended\", _ => {\n                        this.playNextTrack();\n                });\n                return audio;\n        }\n        addSourceToQueue(newSource, index) {\n                const source = document.createElement(\"source\");\n                source.type = \"audio/mpeg\";\n                source.src = newSource;\n                this.sourceElements[index] = source;\n        }\n        playTrackAtIndex(index) {\n                console.log(this.sourceElements, index);\n                this.audio.pause();\n                this.audio.innerHTML = \"\";\n                this.audio.appendChild(this.sourceElements[index]);\n                this.audio.load();\n                this.audio.play();\n        }\n        playFirstTrack() {\n                if (this.sourceElements.length === 0) {\n                        return;\n                }\n                this.playTrackAtIndex(0);\n        }\n        playNextTrack() {\n                if (this.sourceElements.length === 0) {\n                        return;\n                }\n                this.playTrackAtIndex((this.sourceElements.indexOf(this.audio.firstChild) + 1) % this.sourceElements.length);\n        }\n        playPreviousTrack() {\n                if (this.sourceElements.length === 0) {\n                        return;\n                }\n                if (this.sourceElements.length === 0) {\n                        return;\n                }\n                this.playTrackAtIndex((this.sourceElements.indexOf(this.audio.firstChild) + this.sourceElements.length - 1) % this.sourceElements.length);\n\n        }\n        initAnalyser() {\n                const context = new AudioContext();\n                const analyser = context.createAnalyser();\n                const source = context.createMediaElementSource(this.audio);\n                source.connect(analyser);\n                analyser.connect(context.destination);\n                return analyser;\n        }\n        updateVisualizer() {\n                this.requestID = requestAnimationFrame(_ => this.updateVisualizer());\n                const fbcArray = new Uint8Array(this.analyser.frequencyBinCount);\n                this.analyser.getByteFrequencyData(fbcArray);\n                this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n                this.ctx.fillStyle = '#0DDEFF';\n                const barWidth = 2;\n                const gap = 1;\n                const barStep = barWidth + gap;\n                const NumberOfBars = (this.canvas.width / barStep >= 1024) ? this.canvas.width / barStep : 1023;\n                for (let i = 0; i < NumberOfBars; i++) {\n                        const barX = i * barStep;\n                        const barHeight = -(fbcArray[i]) * 0.004 * window.innerHeight * 0.8; // 0.004 ~ 1/255; array takes value from 0 to 255\n                        this.ctx.fillRect(barX, this.canvas.height, barWidth, barHeight);\n                }\n        }\n        runVisualizer() {\n                this.requestID = requestAnimationFrame(_ => this.updateVisualizer());\n        }\n        stopVisualizer() {\n                setTimeout(_ => {\n                        cancelAnimationFrame(this.requestID);\n                }, 2000);\n\n        }\n        addToRemotePlaylist(name,path) {\n                fetch(\"http://localhost:3000/playlist\", {\n                                headers: {\n                                        'Accept': 'application/json',\n                                        'Content-Type': 'application/json'\n                                },\n                                method: \"POST\",\n                                body: JSON.stringify({\n                                        name: `${name}`,\n                                        path:`${path}`\n                                        \n                                })\n                        })\n                        .then((resolve) => {\n                                console.log(`Saved: ${name}, ${path}`);\n                        })\n                        .catch((err) => {\n                                console.log(`Duplikat: ${name}, ${path}`);\n                        });\n        }\n        updateLocalPlaylist() {\n                this.sourceElements = [];\n                this.playlist.innerHTML = \"\";\n                fetch(\"http://localhost:3000/playlist\")\n                        .then(response => response.json().then((response) => response.reverse().forEach((element, index) => {\n\n                                const track = document.createElement(\"div\");\n                                this.playlist.appendChild(track);\n                                track.classList.add(\"track\");\n\n                                const deleteBtn = document.createElement(\"div\");\n                                track.appendChild(deleteBtn);\n                                deleteBtn.classList.add(\"deleteBtn\");\n                                deleteBtn.innerHTML = \"X\";\n                                deleteBtn.addEventListener(\"click\", (event) => {\n                                        fetch(`http://localhost:3000/playlist/${element.id}`, {\n                                                headers: {\n                                                        'Accept': 'application/json',\n                                                        'Content-Type': 'application/json'\n                                                },\n                                                method: \"DELETE\"\n                                        }).catch((err) => {\n                                                console.log(err)\n                                        });\n                                        event.stopPropagation();\n                                        deleteBtn.parentNode.parentNode.removeChild(deleteBtn.parentNode);\n                                        this.sourceElements.splice(index, 1);\n                                });\n                                const name = document.createElement(\"div\");\n                                track.appendChild(name);\n                                name.innerHTML = `Name: ${element.name}`;\n\n                                track.addEventListener(\"click\", _ => {\n                                        this.playTrackAtIndex(index);\n                                });\n\n                                this.addSourceToQueue(`${element.path}`, index);\n\n                        })));\n                console.log(\"Tracks in the playlist:\", this.sourceElements);\n        }\n\n        log() {\n                console.log(this.playPauseBtn, this.rightPanel, this.bottomPanel, this.playPauseBtn, this.canvas, this.ctx, this.audio, this.sourceElements);\n        }\n\n}","import {Siren} from \"./siren\";\n\nconst siren = new Siren();\n"],"sourceRoot":""}